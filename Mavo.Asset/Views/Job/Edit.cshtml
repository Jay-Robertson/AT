@model Mavo.Assets.Models.ViewModel.EditJobPostModel
@{
    if (Model != null)
    {
        ViewBag.Title = "Edit :: " + Model.Name;
    }
    else
    {
        ViewBag.Title = "Create :: Job";
    }
}

@section LeftNav
{
    @{Html.RenderPartial(MVC.Job.Views._JobSidebar, new Mavo.Assets.Models.ViewModel.SearchResult());}
}
@section scripts
{

    <script type="text/javascript">
        jQuery(function ($) {
            $('#Role').val(8);
            $('#addForeman').submit(function () {
                var req = $.ajax({ url: $(this).attr('action'), type: 'POST', data: $(this).serialize() });
                req.done(function (data) {
                    $('#ForemanId').append($('<option></option>').val(data.value).html(data.text));
                    $('#ForemanId').val(data.value);
                    $('#addForemanModal').hide();
                });
                return false;
            }
           );

            $('#job-tabs').tab();
            $('#btnAddFromTemplate').hide();
        });
        @if (Model != null && Model.Status == Mavo.Assets.Models.JobStatus.BeingPicked)
        {
            <text>
        $('#btnCancelPick').click(function () {
            $.post('/jobpicker/cancel/@Model.Id', function (status) {
                $('.alert-info').hide();
                $('#status').html(status);
            });
        });
        </text>
        }
        @if (Model != null && Model.Status == Mavo.Assets.Models.JobStatus.BeingReturned)
        {
            <text>
        $('#btnCancelReturn').click(function () {
            $.post('/jobreturner/cancel/@Model.Id', function (status) {
                $('.alert-info').hide();
                $('#status').html(status);
            });
        });
        </text>
        }
        @if (Model != null)
        {
            if (Model.IsAddon)
            {
                <text>
        $(":input").attr("disabled", "disabled");
        $("#PickupTime, #btnSubmit, #btnPickYes").removeAttr('disabled');
                </text>
            }
            else
            {
                <text>
        $('#TemplateId').change(function () {
            if ($(this).val() != '') {
                $('#btnAddFromTemplate').show();
            }
            else {
                $('#btnAddFromTemplate').hide();
            }
        });
        $('#btnAddFromTemplate').click(function () {
            $.post('/job/AddAssetsFromTemplate/' + @Model.Id + '?templateId=' + $('#TemplateId').val(), function (assetsHtml) {
                $('#asset-container').html(assetsHtml);
            });
        });
        </text>
            }

        }
    </script>

}

@if (null != Model)
{
    Html.RenderPartial("_PickJobModal", new Mavo.Assets.Models.Job() { Id = Model.Id.Value, PickupTime = Model.PickupTime, Name = Model.Name });
    if (Model.Status == Mavo.Assets.Models.JobStatus.Started && !Model.IsAddon)
    {
        Html.RenderAction("TransferAssetsModal", new { id = Model.Id });
        Html.RenderAction("AddOnModal", new { id = Model.Id });
    }
}
<h1>
    <span>@ViewBag.Action Job</span>
    @if (null != Model)
    {
        <span>&gt; @Model.Name</span>
        if (Model.IsAddon)
        {
        <span class="label label-info"><i class="icon-plus-sign icon-white"></i></span>
        }
        if (Model.Status == Mavo.Assets.Models.JobStatus.New)
        {
        <a data-toggle="modal" href="#pickupModal@(Model.Id.Value)" class="pull-right btn btn-primary"><i class="icon-lock icon-white"></i>&nbsp;Ready to pick</a>
        }
        else if (Model.Status == Mavo.Assets.Models.JobStatus.Started && !Model.IsAddon)
        {
        <span class="pull-right">
            <a data-toggle="modal" href="#transferAssetModel@(Model.Id.Value)" class="btn btn-primary"><i class="icon-random icon-white"></i>&nbsp;Transfer Assets</a>
            <a data-toggle="modal" href="#addOnModal@(Model.Id.Value)" class="btn btn-success"><i class="icon-plus icon-white"></i>&nbsp;Add On</a>
        </span>
        }
    }

</h1>

@{Html.RenderPartial("_JobAlerts", Model);}

@if (null != Model)
{
    <ul id="job-tabs" class="nav nav-tabs">
        <li><a href="#details" data-toggle="tab">Data Sheet</a></li>
        <li class="@(Model.Status == Mavo.Assets.Models.JobStatus.New || Model.Status == Mavo.Assets.Models.JobStatus.ReadyToPick ? "active" : "")"><a href="#assets" data-toggle="tab">Pick List</a></li>
        @if (Model.Status >= Mavo.Assets.Models.JobStatus.BeingPicked)
        {
            <li class="active"><a href="#jobstatus" data-toggle="tab">Status</a></li>
        }
    </ul>
}

@if (Model != null && Model.Status <= Mavo.Assets.Models.JobStatus.ReadyToPick)
{
    <div class="row-fluid">
        <div class="well">
            <h4>Template</h4>
            @Html.DropDownList("TemplateId", ((IList<Mavo.Assets.Models.Template>)ViewBag.Templates).Select(x => new SelectListItem()
               {
                   Value = x.Id.ToString(),
                   Text = x.Name,
                   Selected = Model == null || (ViewBag.TemplateId != null && ViewBag.TemplateId.HasValue) ? false : x.Id == ViewBag.TemplateId
               }), string.Empty)
            @if (Model != null)
            {
                <a href="#" id="btnAddFromTemplate" class="btn btn-success">Add Items from Template</a>
            }
        </div>
    </div>
}
<div class="tab-content">
    @{
        Html.RenderPartial("Tabs\\_DataSheet", Model);

        Html.RenderPartial("Tabs\\_PickList", Model);

        Html.RenderPartial("Tabs\\_AssetHistory", Model);
    }
</div>

@{Html.RenderPartial("_AddForemanModal");}

@model Mavo.Assets.Models.ViewModel.EditJobPostModel
@{
    if (Model != null)
    {
        ViewBag.Title = "Edit :: " + Model.Name;
    }
    else
    {
        ViewBag.Title = "Create :: Job";
    }
}

@section LeftNav
{
    @{Html.RenderPartial(MVC.Job.Views._JobSidebar, new Mavo.Assets.Models.ViewModel.SearchResult());}
}
@section scripts
{

    <script type="text/javascript">
        jQuery(function ($) {

            $('#CustomerId').change(function () {
                var customerId = $(this).val();
                if (customerId) {
                    $.get('/job/GetCustomerAddress/' + customerId, function (data) {
                        var addressString = data.Address1 + '<br />';
                        if (data.Address2)
                            addressString += data.Address2 + '<br />';
                        addressString += data.City + ',' + data.State + ' ' + data.ZipCode;

                        $('#customerAddress').html(addressString);

                        @if (Model == null || Model.Address == null)
                        {
                            <text>
                        $('#Address_Address1').val(data.Address1);
                        $('#Address_Address2').val(data.Address2);
                        $('#Address_City').val(data.City);
                        $('#Address_State').val(data.State);
                        $('#Address_ZipCode').val(data.ZipCode);
                            </text>
                        }

                    });
                }
                else
                    $('#customerAddress').html('');

            });

            $('#Role').val(8);
            $('#addForeman').submit(function () {
                var req = $.ajax({ url: $(this).attr('action'), type: 'POST', data: $(this).serialize() });
                req.success(function (data) {
                    $('#ForemanId').append($('<option></option>').val(data.value).html(data.text));
                    $('#ForemanId').val(data.value);
                    $('#addForemanModal').hide();
                });
                return false;
            }
           );
            $('#addProjectManager').submit(function () {
                var req = $.ajax({ url: $(this).attr('action'), type: 'POST', data: $(this).serialize() });
                req.success(function (data) {
                    $('#ProjectManagerId').append($('<option></option>').val(data.value).html(data.text));
                    $('#ProjectManagerId').val(data.value);
                    $('#addProjectManagerModal').hide();
                });
                return false;
            }
           );
            $('#addCustomer').submit(function () {
                var req = $.ajax({ url: '/api/customer', type: 'POST', data: $(this).serialize() });
                req.success(function (data) {
                    $('#CustomerId').append($('<option></option>').val(data.Id).html(data.Name));
                    $('#CustomerId').val(data.Id);
                    $('#addCustomerModal').hide();
                });
                return false;
            }
         );
            $('#job-tabs').tab();
            $('#btnAddFromTemplate').hide();
        });
        @if (Model != null && Model.Status == Mavo.Assets.Models.JobStatus.BeingPicked)
        {
            <text>
        $('#btnCancelPick').click(function () {
            $.post('/jobpicker/cancel/@Model.Id', function (status) {
                $('.alert-info').hide();
                $('#status').html(status);
            });
        });
        </text>
        }
        @if (Model != null && Model.Status == Mavo.Assets.Models.JobStatus.BeingReturned)
        {
            <text>
        $('#btnCancelReturn').click(function () {
            $.post('/jobreturner/cancel/@Model.Id', function (status) {
                $('.alert-info').hide();
                $('#status').html(status);
            });
        });
        </text>
        }
        @if (Model != null)
        {
            <text>
        var map;
        $('#jobSummary_link').on('show', function (e) {
            if (map == undefined) {
                var directionsService = new google.maps.DirectionsService();
                var directionsDisplay = new google.maps.DirectionsRenderer();

                var mapOptions = {
                    zoom: 7,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                }

                map = new google.maps.Map(document.getElementById("map"), mapOptions);
                directionsDisplay.setMap(map);

                var request = {
                    origin: '4330 Centerville Road White Bear Lake, MN 55127',
                    destination: '@Model.Address.Address1 @Model.Address.Address2 @Model.Address.City @Model.Address.State @Model.Address.ZipCode',
                    travelMode: google.maps.DirectionsTravelMode.DRIVING
                };

                directionsService.route(request, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        // Give the response to the directions display
                        directionsDisplay.setDirections(response);

                        // Display the route on the map
                        directionsDisplay.setMap(map);

                        // Grab the result from the routes
                        var routeResult = response.routes[0];

                        // Iterate over each leg of the route
                        routeResult.legs.forEach(function (leg) {
                            // Build HTML for each step
                            var stepHTML = '';
                            leg.steps.forEach(function (step) {
                                stepHTML += '<tr>' +
                                          '<td>' + step.instructions + '</td>' +
                                          '<td>' + step.distance.text + ' (' + step.duration.text + ')' + '</td>' +
                                        '</tr>';
                            });

                            // Put the step HTML somewhere
                            $('#steps').append(stepHTML);
                        });
                    }
                });
            }
        });


        </text>
            if (Model.IsAddon)
            {
                <text>
        $(":input").attr("disabled", "disabled");
        $("#PickupTime, #btnSubmit, #btnPickYes").removeAttr('disabled');
                </text>
            }
            else
            {
                <text>
        $('#TemplateId').change(function () {
            if ($(this).val() != '') {
                $('#btnAddFromTemplate').show();
            }
            else {
                $('#btnAddFromTemplate').hide();
            }
        });
        $('#btnAddFromTemplate').click(function () {
            $.post('/job/AddAssetsFromTemplate/' + @Model.Id + '?templateId=' + $('#TemplateId').val(), function (assetsHtml) {
                $('#asset-container').html(assetsHtml);
            });
        });
        </text>
            }

        }
    </script>

}

@if (null != Model)
{
    Html.RenderPartial("Modals\\_PickJobModal", new Mavo.Assets.Models.Job() { Id = Model.Id.Value, PickupTime = Model.PickupTime, Name = Model.Name });
    if (Model.Status == Mavo.Assets.Models.JobStatus.Started && !Model.IsAddon)
    {
        Html.RenderAction("TransferAssetsModal", new { id = Model.Id });
        Html.RenderAction("AddOnModal", new { id = Model.Id });
    }
}
<h1 class="noprint">
    <span>@ViewBag.Action Job</span>
    @if (null != Model)
    {
        <span>&gt; @Model.Name</span>
        if (Model.IsAddon)
        {
        <span class="label label-info"><i class="icon-plus-sign icon-white"></i></span>
        }
        if (Model.Status == Mavo.Assets.Models.JobStatus.New)
        {
        <a data-toggle="modal" href="#pickupModal@(Model.Id.Value)" class="pull-right btn btn-primary noprint"><i class="icon-lock icon-white"></i>&nbsp;Ready to pick</a>
        }
        else if (Model.Status == Mavo.Assets.Models.JobStatus.Started && !Model.IsAddon)
        {
        <span class="pull-right">
            <a data-toggle="modal" href="#transferAssetModel@(Model.Id.Value)" class="btn btn-primary"><i class="icon-random icon-white"></i>&nbsp;Transfer Assets</a>
            <a data-toggle="modal" href="#addOnModal@(Model.Id.Value)" class="btn btn-success"><i class="icon-plus icon-white"></i>&nbsp;Add On</a>
        </span>
        }
    }

</h1>

@{Html.RenderPartial("_JobAlerts", Model);}

@*Tabs*@
@if (null != Model)
{
    <ul id="job-tabs" class="nav nav-tabs">
        <li><a href="#details" data-toggle="tab">Data Sheet</a></li>
        <li class="@(Model.Status == Mavo.Assets.Models.JobStatus.New || Model.Status == Mavo.Assets.Models.JobStatus.ReadyToPick ? "active" : "")"><a href="#assets" data-toggle="tab">Pick List</a></li>
        @if (Model.Status >= Mavo.Assets.Models.JobStatus.BeingPicked)
        {
            <li class="active"><a href="#jobstatus" data-toggle="tab">Status</a></li>
        }
        <li><a href="#jobSummary" id="jobSummary_link" data-toggle="tab">Job Summary</a></li>
    </ul>
}

<div class="tab-content">
    @{
        Html.RenderPartial("Tabs\\_DataSheet", Model);

        Html.RenderPartial("Tabs\\_PickList", Model);

        Html.RenderPartial("Tabs\\_AssetHistory", Model);

        Html.RenderPartial("Tabs\\_JobSummary", Model);
        
    }
</div>

@{Html.RenderPartial("Modals\\_AddForemanModal");}
@{Html.RenderPartial("Modals\\_AddProjectManagerModal");}
@{Html.RenderPartial("Modals\\_AddCustomerModal", new Mavo.Assets.Models.Customer());}

@model Mavo.Assets.Models.Asset
@{
    if (Model != null)
    {
        ViewBag.Title = "Edit :: " + Model.Name;
    }
    else
    {
        ViewBag.Title = "Create :: Asset";
    }
}
@section LeftNav
{
    @{Html.RenderPartial(MVC.Asset.Views._AssetSidebar, new Mavo.Assets.Models.ViewModel.AssetsLeftNavViewModel() { Asset = Model, Assets = ViewBag.Assets });}
}
@using (Html.BeginForm(MVC.Asset.Edit(), FormMethod.Post, new { @class = "form-horizontal" }))
{
    <script>
        jQuery(function ($) {
            var trackKind = function () {
                var isSerialized = ('Serialized' == $('#Kind').val());
                if (isSerialized) {
                    $('#UnitOfMeasure, #Inventory')[isSerialized ? 'attr' : 'removeAttr']('disabled', 'disabled');
                }
                else {
                    $('#UnitOfMeasure, #Inventory').removeAttr('disabled', 'disabled');
                }
                $('#AssetItems').toggle(isSerialized);
            }
            trackKind();
            $('#Kind').change(trackKind);

        });
    </script>
    
    @Html.ValidationSummary(true)
    @Html.HiddenFor(x => x.Id)
    <fieldset>
        <div class="well">
            <legend>Asset Details</legend>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.Name)
                <div class="controls">
                    @Html.EditorFor(x => x.Name)
                </div>
            </div>

          

            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.Category)
                <div class="controls">
                    @Html.DropDownList("CategoryId", ((IList<Mavo.Assets.Models.AssetCategory>)ViewBag.AssetCategories).Select(x => new SelectListItem()
                   {
                       Value = x.Id.ToString(),
                       Text = x.Name,
                       Selected = Model == null || Model.Category == null ? false : x.Id == Model.Category.Id
                   }), string.Empty)
                    <a class="btn btn-small btn-success" href="#createCategory"><i class="icon-plus icon-white"></i></a>
                </div>
            </div>

            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.UnitOfMeasure)
                <div class="controls">
                    @Html.EditorFor(x => x.UnitOfMeasure)
                </div>
            </div>
             <div class="control-group">
                @Html.LabelTitleizeFor(x => x.MavoItemNumber)
                <div class="controls">
                    @Html.EditorFor(x => x.MavoItemNumber)
                </div>
            </div>
        </div>
    </fieldset> 
    
    <div class="well">
        <fieldset>
            <legend>Warehousing Data</legend>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.Kind)
                <div class="controls">
                    @Html.DropDownListFor(model => model.Kind, new SelectList(Enum.GetValues(typeof(Mavo.Assets.Models.AssetKind))))
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.Inventory)
                <div class="controls">
                    @Html.EditorFor(x => x.Inventory)
                </div>
            </div>
        </fieldset>
    </div>
     
    if (ViewBag.AssetItems != null)
    {
    <div id="AssetItems" class="well">
        <fieldset>
            <legend>Associated Asset Items</legend>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Barcode</th>
                        <th>Manufacturer</th>
                        <th>Model</th>
                        <th>Inventory Status</th>
                        <th>Condtion</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (null != Model.Items)
                    {
                        foreach (var item in Model.Items)
                        {
                        <tr>
                            <td>@item.Barcode</td>
                            <th>@item.Manufacturer</th>
                            <th>@item.ModelNumber</th>
                            <td><span class="label label-@(item.Status == Mavo.Assets.Models.InventoryStatus.In ? "success" : "important")"><i class="icon-white icon-@(item.Status == Mavo.Assets.Models.InventoryStatus.In ? "ok-sign" : "remove-circle")"></i>&nbsp;@item.Status</span></td>
                            <td>@item.Condition</td>
                            <td><a href="@Url.Action(MVC.Asset.Scan(item.Id))" class="btn btn-primary btn-small">Edit</a></td>
                        </tr>
                        }
                    }
                </tbody>
            </table>
        </fieldset>
    </div>
    }
    <div class="row-fluid">
        <div class="form-actions">
            <input type="submit" class="btn btn-primary" />
        </div>
    </div>
}

@section scripts
{
<script type="text/javascript">
    jQuery(function ($) {
        $('a[href="#createCategory"]').click(function () {
            var a = prompt("New category name:");
            if (a.length > 0)
            {
                $.ajax({
                    type: 'POST',
                    url: '/api/category',
                    data: { Name: a }
                })
                .fail(function () { alert('Error creating category.'); })
                .done(function (data) {
                    $('#CategoryId').append(
                        '<option selected="true" value="' +
                        data.Id +
                        '">' +
                        data.Name +
                        '</option>'
                    );
                });
            }
        });
    });
</script>
}
@model Mavo.Assets.Models.ViewModel.AssetScanPostModel
@{
    ViewBag.Title = "Scan a new asset item";
}
@section LeftNav
{
    @{Html.RenderPartial(MVC.Asset.Views._AssetSidebar, new Mavo.Assets.Models.ViewModel.AssetsLeftNavViewModel() { Asset = null, Assets = ViewBag.Assets });}
}
@using (Html.BeginForm(MVC.Asset.ScanItem(), FormMethod.Post, new { @class = "form-horizontal" }))
{
    if (Model != null && Model.Id.HasValue)
    {
        @Html.HiddenFor(x => x.Id)
    }
    <fieldset>
        <legend>Item Details</legend>
        <div class="well">
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.AssetCategoryId)
                <div class="controls">
                    @Html.DropDownListFor(x => x.AssetCategoryId, ((IList<Mavo.Assets.Models.AssetCategory>)ViewBag.AssetCategories).Select(x => new SelectListItem()
               {
                   Value = x.Id.ToString(),
                   Text = x.Name
               }))
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.AssetId)
                <div class="controls">
                    @Html.DropDownListFor(x => x.AssetId, ((IList<Mavo.Assets.Models.Asset>)ViewBag.AssetsForDropDown).Where(x => x.Kind == Mavo.Assets.Models.AssetKind.Serialized).Select(x => new SelectListItem()
               {
                   Value = x.Id.ToString(),
                   Text = String.Format("[{0}] {1}", x.MavoItemNumber, x.Name)
               }), string.Empty)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.Barcode)
                <div class="controls">
                    <div class="input-prepend input-append">
                        <span class="add-on"><i class="icon-barcode"></i></span>
                        @Html.TextBoxFor(x => x.Barcode, new { data_barcode_receiver = "true" })
                    </div>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.Condition)
                <div class="controls">
                    @Html.DropDownListFor(model => model.Condition, new SelectList(Enum.GetValues(typeof(Mavo.Assets.Models.AssetCondition))))
                </div>
            </div>
            @if (Model.Id.HasValue)
            {
                <div class="control-group">
                    @Html.LabelTitleizeFor(x => x.Status)
                    <div class="controls">
                        <a href="/Reporting/AssetHistoryFilter?Id=@Model.Barcode"><span class="label label-@(Model.Status == Mavo.Assets.Models.InventoryStatus.In ? "success" : "important")"><i class="icon-white icon-@(Model.Status == Mavo.Assets.Models.InventoryStatus.In ? "ok-sign" : "remove-circle")"></i>&nbsp;@Model.Status</span></a>
                        @if (Model.Status == Mavo.Assets.Models.InventoryStatus.Out && ViewBag.CurrentUserRole.HasFlag(Mavo.Assets.Models.UserRole.Administrator))
                        {
                            <div class="alert alert-danger" style="margin-top: 10px;">
                                <strong>You can return this item to inventory.</strong>
                                If this item was lost and has now been found, or if it was accidently not marked as returned, you may use this feature
                                to force the item back into available inventory. Do not use this function for performing normal returns.
                                <p style="margin-top: 10px;">
                                    <a href="/Assets/FoundItem/@Model.Id.Value" class="btn btn-danger">Return this item to inventory</a>
                                </p>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </fieldset>
    <fieldset>
        <legend>Manufactuer, Model and Vendor data</legend>
        <div class="well">
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.Manufacturer)
                <div class="controls">
                    @Html.EditorFor(x => x.Manufacturer)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.ModelNumber)
                <div class="controls">
                    @Html.EditorFor(x => x.ModelNumber)
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset>
        <legend>Warranty Information</legend>
        <div class="well">
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.PurchaseDate)
                <div class="controls">
                    @Html.EditorFor(x => x.PurchaseDate)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.PurchasePrice)
                <div class="controls">
                    @Html.EditorFor(x => x.PurchasePrice)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.SerialNumber)
                <div class="controls">
                    @Html.EditorFor(x => x.SerialNumber)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelTitleizeFor(x => x.WarrantyExpiration)
                <div class="controls">
                    @Html.EditorFor(x => x.WarrantyExpiration)
                </div>
            </div>
        </div>
    </fieldset>

    <div class="row-fluid">
        <div class="form-actions">
            <input type="submit" class="btn btn-primary" />
        </div>
    </div>
}
@section Scripts
{
    <script>
        $('#AssetCategoryId').change(function () {
            $.get('/asset/assetpickerdetail/' + $(this).val(), function (data) {
                $('#AssetId').html(data)
            });
        });
    </script>
}
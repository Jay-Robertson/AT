@model Mavo.Assets.Models.ViewModel.PickAJobModel

@{
    ViewBag.Title = "TabletPicker";
    Layout = MVC.JobPicker.Views._PickerLayout;
}

@section AdditionalScripts
{

    <script type="text/javascript">
        var numberPicked = 0;
        var nonserializedPicked = new Array();
        var serializedPicked = new Array();
        var alreadyPicked = new Array();
        $('#serializedErrorBlock').hide();

        $('.pickform').submit(function () {
            var assetId = $(this).children(':hidden').val();
            var quantityPicked = parseInt($('#quantityPicked' + assetId).val());
            var quantityNeeded = parseInt($('#quantityNeeded' + assetId).html());
            $('#pick' + assetId).modal('hide');
            $('#quantityNeeded' + assetId).html(quantityNeeded - quantityPicked);
            $('#qtyPicked' + assetId).val(quantityPicked);

            var req = $.ajax(
                {
                    url: '/jobpicker/pickassetforjob?jobId=@Model.JobId&assetId=' + assetId + '&quantity=' + quantityPicked,
                    type: 'POST',
                    dataType: "html"
                });
            req.done(function (data) {
                if ($('#picked-row-' + assetId).length != 0) {
                    $('#picked-row-' + assetId).replaceWith(data);
                }
                else {
                    $('#alreadyPickedTable').append(data);
                }
            });
            if (quantityNeeded - quantityPicked <= 0) {
                $('#row' + assetId).remove();
            }
            if (quantityPicked > 0 && !$.inArray(assetId, nonserializedPicked) > -1) {
                numberPicked = numberPicked + 1;
                nonserializedPicked.push(assetId);
            }
            return false;
        });
        $('#assetScanner').submit(function () {
            $('#serializedErrorBlock').removeClass('in');
            $('#serializedErrorBlock').hide();
            if ($.inArray($('#barcodeInput').val(), alreadyPicked) > -1) {
                $('#serializedErrorBlock').show();
                $('#errorMessage').html('You have already scanned ' + $('#barcodeInput').val());
                $('#serializedErrorBlock').addClass('in');
                $('#barcodeInput').val('');
                return false;
            }
            else {
                $.ajax({ url: $(this).attr('action'), type: 'POST', data: $(this).serialize() })
                .fail(function (data) {
                    $('#serializedErrorBlock').show();
                    $('#errorMessage').html('There was an error scanning ' + $('#barcodeInput').val());
                    $('#serializedErrorBlock').addClass('in');
                    $('#barcodeInput').val('');
                    return false;
                })
                .done(function (data) {
                    if (!data.success) {
                        $('#serializedErrorBlock').show();
                        $('#errorMessage').html(data.reason);
                        $('#serializedErrorBlock').addClass('in');
                        $('#barcodeInput').val('');
                        return false;
                    }
                    else {
                        var assetId = data.assetId;
                        var quantityNeeded = parseInt($('#quantityNeeded' + assetId).html());
                        quantityNeeded = quantityNeeded - 1;
                        $('#quantityNeeded' + assetId).html(quantityNeeded);
                        alreadyPicked.push($('#barcodeInput').val());

                        var req = $.ajax(
                          {
                              url: '/jobpicker/pickassetforjob?jobId=@Model.JobId&assetId=' + assetId + '&barcode=' + $('#barcodeInput').val(),
                              type: 'POST',
                              dataType: "html"
                          });
                        req.fail(function(data){
                            $('#serializedErrorBlock').show();
                            $('#errorMessage').html('There was an error scanning this item');
                            $('#serializedErrorBlock').addClass('in');
                            $('#barcodeInput').val('');
                            return false;
                        });
                        req.success(function (data) {
                            if ($('#picked-row-' + assetId).length != 0) {
                                $('#picked-row-' + assetId).replaceWith(data);
                            }
                            else {
                                $('#alreadyPickedTable').append(data);
                            }
                            if (quantityNeeded - 1 <= 0) {
                                $('#row' + assetId).remove();
                            }
                        });
                    }
                    $('#barcodeInput').val('');
                });
                return false;
            }
        });
       
    </script>

}

<div class="well well-small">
    @using (Html.BeginForm(MVC.Asset.GetAssetDetail(), FormMethod.Post, new { @class = "form form-inline", id = "assetScanner" }))
    {
        var serializedAssets = Model.Assets.Where(x => x.Kind == Mavo.Assets.Models.AssetKind.Serialized).ToList();
        foreach (var serialzedAsset in serializedAssets)
        {
        <input type="hidden" name="availableAssets[@(serializedAssets.FindIndex(x => x.AssetId == serialzedAsset.AssetId).ToString())]" value="@serialzedAsset.AssetId" />
        }
        <input type="text" name="id" id="barcodeInput" placeholder="Scan a Barcode" />
        <input type="submit" value="Lookup" />
    }
</div>

<div class="alert alert-block alert-error fade" id="serializedErrorBlock">
    <h4 id="errorMessage">Error</h4>
</div>

<h2>To Be Picked</h2>
<table class="table table-striped table-hover" id="toPickTable">
    <thead>
        <tr>
            <th>#</th>
            <th>Item</th>
            <th>Needed</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Assets.Where(x => x.QuantityNeeded > 0))
        {
            <tr id="row@(item.AssetId)">
                <td>@item.MavoItemNumber</td>
                <td>@item.Name</td>
                <td id="quantityNeeded@(item.AssetId)">
                    @item.QuantityNeeded
                </td>
                <td>
                    @if (item.Kind != Mavo.Assets.Models.AssetKind.Serialized)
                    {
                        <a href="#pick@(item.AssetId)" role="button"  data-toggle="modal" class="btn btn-primary"><i class="icon-shopping-cart icon-white"></i>&nbsp;Pick</a>
                    }
                    else
                    {
                        <text>(scan barcodes)</text>
                    }
                </td>
            </tr>

        }
    </tbody>
</table>
<h2>Already Picked</h2>
<table class="table table-striped table-hover" id="alreadyPickedTable">
    <thead>
        <tr>
            <th>#</th>
            <th>Item</th>
            <th>Picked</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pickedAsset in Model.Assets.Where(x => x.QuantityTaken.HasValue && x.QuantityTaken > 0))
        {
            Html.RenderPartial(MVC.JobPicker.Views._PickedAssetRow, new Mavo.Assets.Controllers.PickedAssetRow()
            {
                AssetId = pickedAsset.AssetId,
                AssetName = pickedAsset.Name,
                CurrentPickedQty = pickedAsset.QuantityTaken.Value,
                MavoNumber = pickedAsset.MavoItemNumber
            });
        }
    </tbody>
</table>
<span id="pickedSerialized"></span>

<div class="row-fluid">
    <div class="form-actions">
        @using (Html.BeginForm(MVC.JobPicker.CompletePicking(Model.JobId)))
        {
            <input type="submit" class="btn btn-primary" id="btnSubmit" />
        }
    </div>
</div>

@foreach (var item in Model.Assets.Where(x => x.Kind != Mavo.Assets.Models.AssetKind.Serialized))
{
    <div id="pick@(item.AssetId)" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="pick@(item.AssetId)Label" aria-hidden="true">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3 id="myModalLabel">Pick @item.Name</h3>
        </div>
        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-inline pickform", id = "pickForm" + item.AssetId.ToString() }))
        {
            <input type="hidden" id="itemid@(item.AssetId)" value="@item.AssetId" />
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Item</th>
                            <th>Needed</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@item.MavoItemNumber</td>
                            <td>@item.Name</td>
                            <td>@item.QuantityNeeded</td>
                        </tr>
                    </tbody>
                </table>

                <label for="quantityPicked@(item.AssetId)">Quantity Picked</label>
                <input type="text" value="@item.QuantityNeeded" id="quantityPicked@(item.AssetId)" />
            </div>
            <div class="modal-footer">
                <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                <button type="submit" class="btn btn-primary pick">Pick</button>
            </div>
        }
    </div>
}